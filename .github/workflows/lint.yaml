name: Lint and Format

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  GO_VERSION: "1.23.0"

jobs:
  lint:
    name: Go Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Check go mod tidy
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "go.mod or go.sum is not tidy. Please run 'go mod tidy' and commit changes."
            exit 1
          fi

      - name: Check gofmt formatting
        run: |
          unformatted=$(gofmt -l .)
          if [ -n "$unformatted" ]; then
            echo "Files not formatted with gofmt:"
            echo "$unformatted"
            echo "Please run 'gofmt -w .' to fix formatting"
            exit 1
          fi

      - name: Check goimports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          unformatted=$(goimports -l .)
          if [ -n "$unformatted" ]; then
            echo "Files need import formatting:"
            echo "$unformatted"
            echo "Please run 'goimports -w .' to fix imports"
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.61.0
          golangci-lint run --timeout=10m
