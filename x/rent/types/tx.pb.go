// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ardapoc/rent/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateLease struct {
	Creator                  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PropertyId               string `protobuf:"bytes,2,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
	Tenant                   string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	RentAmount               uint64 `protobuf:"varint,4,opt,name=rentAmount,proto3" json:"rentAmount,omitempty"`
	RentDueDate              string `protobuf:"bytes,5,opt,name=rentDueDate,proto3" json:"rentDueDate,omitempty"`
	Status                   string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	TimePeriod               uint64 `protobuf:"varint,7,opt,name=timePeriod,proto3" json:"timePeriod,omitempty"`
	PaymentsOutstanding      string `protobuf:"bytes,8,opt,name=paymentsOutstanding,proto3" json:"paymentsOutstanding,omitempty"`
	TermLength               string `protobuf:"bytes,9,opt,name=termLength,proto3" json:"termLength,omitempty"`
	RecurringStatus          bool   `protobuf:"varint,10,opt,name=recurringStatus,proto3" json:"recurringStatus,omitempty"`
	CancellationPending      bool   `protobuf:"varint,11,opt,name=cancellationPending,proto3" json:"cancellationPending,omitempty"`
	CancellationInitiator    string `protobuf:"bytes,12,opt,name=cancellationInitiator,proto3" json:"cancellationInitiator,omitempty"`
	CancellationDeadline     uint64 `protobuf:"varint,13,opt,name=cancellationDeadline,proto3" json:"cancellationDeadline,omitempty"`
	LastPaymentBlock         uint64 `protobuf:"varint,14,opt,name=lastPaymentBlock,proto3" json:"lastPaymentBlock,omitempty"`
	PaymentTerms             string `protobuf:"bytes,15,opt,name=paymentTerms,proto3" json:"paymentTerms,omitempty"`
	CancellationRequirements string `protobuf:"bytes,16,opt,name=cancellationRequirements,proto3" json:"cancellationRequirements,omitempty"`
}

func (m *MsgCreateLease) Reset()         { *m = MsgCreateLease{} }
func (m *MsgCreateLease) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLease) ProtoMessage()    {}
func (*MsgCreateLease) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{2}
}
func (m *MsgCreateLease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLease.Merge(m, src)
}
func (m *MsgCreateLease) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLease proto.InternalMessageInfo

func (m *MsgCreateLease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLease) GetPropertyId() string {
	if m != nil {
		return m.PropertyId
	}
	return ""
}

func (m *MsgCreateLease) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *MsgCreateLease) GetRentAmount() uint64 {
	if m != nil {
		return m.RentAmount
	}
	return 0
}

func (m *MsgCreateLease) GetRentDueDate() string {
	if m != nil {
		return m.RentDueDate
	}
	return ""
}

func (m *MsgCreateLease) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgCreateLease) GetTimePeriod() uint64 {
	if m != nil {
		return m.TimePeriod
	}
	return 0
}

func (m *MsgCreateLease) GetPaymentsOutstanding() string {
	if m != nil {
		return m.PaymentsOutstanding
	}
	return ""
}

func (m *MsgCreateLease) GetTermLength() string {
	if m != nil {
		return m.TermLength
	}
	return ""
}

func (m *MsgCreateLease) GetRecurringStatus() bool {
	if m != nil {
		return m.RecurringStatus
	}
	return false
}

func (m *MsgCreateLease) GetCancellationPending() bool {
	if m != nil {
		return m.CancellationPending
	}
	return false
}

func (m *MsgCreateLease) GetCancellationInitiator() string {
	if m != nil {
		return m.CancellationInitiator
	}
	return ""
}

func (m *MsgCreateLease) GetCancellationDeadline() uint64 {
	if m != nil {
		return m.CancellationDeadline
	}
	return 0
}

func (m *MsgCreateLease) GetLastPaymentBlock() uint64 {
	if m != nil {
		return m.LastPaymentBlock
	}
	return 0
}

func (m *MsgCreateLease) GetPaymentTerms() string {
	if m != nil {
		return m.PaymentTerms
	}
	return ""
}

func (m *MsgCreateLease) GetCancellationRequirements() string {
	if m != nil {
		return m.CancellationRequirements
	}
	return ""
}

type MsgCreateLeaseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateLeaseResponse) Reset()         { *m = MsgCreateLeaseResponse{} }
func (m *MsgCreateLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLeaseResponse) ProtoMessage()    {}
func (*MsgCreateLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{3}
}
func (m *MsgCreateLeaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLeaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLeaseResponse.Merge(m, src)
}
func (m *MsgCreateLeaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLeaseResponse proto.InternalMessageInfo

func (m *MsgCreateLeaseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateLease struct {
	Creator                  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	PropertyId               string `protobuf:"bytes,3,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
	Tenant                   string `protobuf:"bytes,4,opt,name=tenant,proto3" json:"tenant,omitempty"`
	RentAmount               uint64 `protobuf:"varint,5,opt,name=rentAmount,proto3" json:"rentAmount,omitempty"`
	RentDueDate              string `protobuf:"bytes,6,opt,name=rentDueDate,proto3" json:"rentDueDate,omitempty"`
	Status                   string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	TimePeriod               uint64 `protobuf:"varint,8,opt,name=timePeriod,proto3" json:"timePeriod,omitempty"`
	PaymentsOutstanding      string `protobuf:"bytes,9,opt,name=paymentsOutstanding,proto3" json:"paymentsOutstanding,omitempty"`
	TermLength               string `protobuf:"bytes,10,opt,name=termLength,proto3" json:"termLength,omitempty"`
	RecurringStatus          bool   `protobuf:"varint,11,opt,name=recurringStatus,proto3" json:"recurringStatus,omitempty"`
	CancellationPending      bool   `protobuf:"varint,12,opt,name=cancellationPending,proto3" json:"cancellationPending,omitempty"`
	CancellationInitiator    string `protobuf:"bytes,13,opt,name=cancellationInitiator,proto3" json:"cancellationInitiator,omitempty"`
	CancellationDeadline     uint64 `protobuf:"varint,14,opt,name=cancellationDeadline,proto3" json:"cancellationDeadline,omitempty"`
	LastPaymentBlock         uint64 `protobuf:"varint,15,opt,name=lastPaymentBlock,proto3" json:"lastPaymentBlock,omitempty"`
	PaymentTerms             string `protobuf:"bytes,16,opt,name=paymentTerms,proto3" json:"paymentTerms,omitempty"`
	CancellationRequirements string `protobuf:"bytes,17,opt,name=cancellationRequirements,proto3" json:"cancellationRequirements,omitempty"`
}

func (m *MsgUpdateLease) Reset()         { *m = MsgUpdateLease{} }
func (m *MsgUpdateLease) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLease) ProtoMessage()    {}
func (*MsgUpdateLease) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{4}
}
func (m *MsgUpdateLease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLease.Merge(m, src)
}
func (m *MsgUpdateLease) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLease proto.InternalMessageInfo

func (m *MsgUpdateLease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLease) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateLease) GetPropertyId() string {
	if m != nil {
		return m.PropertyId
	}
	return ""
}

func (m *MsgUpdateLease) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *MsgUpdateLease) GetRentAmount() uint64 {
	if m != nil {
		return m.RentAmount
	}
	return 0
}

func (m *MsgUpdateLease) GetRentDueDate() string {
	if m != nil {
		return m.RentDueDate
	}
	return ""
}

func (m *MsgUpdateLease) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgUpdateLease) GetTimePeriod() uint64 {
	if m != nil {
		return m.TimePeriod
	}
	return 0
}

func (m *MsgUpdateLease) GetPaymentsOutstanding() string {
	if m != nil {
		return m.PaymentsOutstanding
	}
	return ""
}

func (m *MsgUpdateLease) GetTermLength() string {
	if m != nil {
		return m.TermLength
	}
	return ""
}

func (m *MsgUpdateLease) GetRecurringStatus() bool {
	if m != nil {
		return m.RecurringStatus
	}
	return false
}

func (m *MsgUpdateLease) GetCancellationPending() bool {
	if m != nil {
		return m.CancellationPending
	}
	return false
}

func (m *MsgUpdateLease) GetCancellationInitiator() string {
	if m != nil {
		return m.CancellationInitiator
	}
	return ""
}

func (m *MsgUpdateLease) GetCancellationDeadline() uint64 {
	if m != nil {
		return m.CancellationDeadline
	}
	return 0
}

func (m *MsgUpdateLease) GetLastPaymentBlock() uint64 {
	if m != nil {
		return m.LastPaymentBlock
	}
	return 0
}

func (m *MsgUpdateLease) GetPaymentTerms() string {
	if m != nil {
		return m.PaymentTerms
	}
	return ""
}

func (m *MsgUpdateLease) GetCancellationRequirements() string {
	if m != nil {
		return m.CancellationRequirements
	}
	return ""
}

type MsgUpdateLeaseResponse struct {
}

func (m *MsgUpdateLeaseResponse) Reset()         { *m = MsgUpdateLeaseResponse{} }
func (m *MsgUpdateLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLeaseResponse) ProtoMessage()    {}
func (*MsgUpdateLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{5}
}
func (m *MsgUpdateLeaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLeaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLeaseResponse.Merge(m, src)
}
func (m *MsgUpdateLeaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLeaseResponse proto.InternalMessageInfo

type MsgDeleteLease struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteLease) Reset()         { *m = MsgDeleteLease{} }
func (m *MsgDeleteLease) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLease) ProtoMessage()    {}
func (*MsgDeleteLease) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{6}
}
func (m *MsgDeleteLease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLease.Merge(m, src)
}
func (m *MsgDeleteLease) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLease proto.InternalMessageInfo

func (m *MsgDeleteLease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLease) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteLeaseResponse struct {
}

func (m *MsgDeleteLeaseResponse) Reset()         { *m = MsgDeleteLeaseResponse{} }
func (m *MsgDeleteLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLeaseResponse) ProtoMessage()    {}
func (*MsgDeleteLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{7}
}
func (m *MsgDeleteLeaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLeaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLeaseResponse.Merge(m, src)
}
func (m *MsgDeleteLeaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLeaseResponse proto.InternalMessageInfo

type MsgPayRent struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	LeaseId string `protobuf:"bytes,2,opt,name=leaseId,proto3" json:"leaseId,omitempty"`
}

func (m *MsgPayRent) Reset()         { *m = MsgPayRent{} }
func (m *MsgPayRent) String() string { return proto.CompactTextString(m) }
func (*MsgPayRent) ProtoMessage()    {}
func (*MsgPayRent) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{8}
}
func (m *MsgPayRent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPayRent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPayRent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPayRent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPayRent.Merge(m, src)
}
func (m *MsgPayRent) XXX_Size() int {
	return m.Size()
}
func (m *MsgPayRent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPayRent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPayRent proto.InternalMessageInfo

func (m *MsgPayRent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPayRent) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

type MsgPayRentResponse struct {
}

func (m *MsgPayRentResponse) Reset()         { *m = MsgPayRentResponse{} }
func (m *MsgPayRentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPayRentResponse) ProtoMessage()    {}
func (*MsgPayRentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_714f33a00203e81b, []int{9}
}
func (m *MsgPayRentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPayRentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPayRentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPayRentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPayRentResponse.Merge(m, src)
}
func (m *MsgPayRentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPayRentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPayRentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPayRentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "ardapoc.rent.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "ardapoc.rent.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateLease)(nil), "ardapoc.rent.MsgCreateLease")
	proto.RegisterType((*MsgCreateLeaseResponse)(nil), "ardapoc.rent.MsgCreateLeaseResponse")
	proto.RegisterType((*MsgUpdateLease)(nil), "ardapoc.rent.MsgUpdateLease")
	proto.RegisterType((*MsgUpdateLeaseResponse)(nil), "ardapoc.rent.MsgUpdateLeaseResponse")
	proto.RegisterType((*MsgDeleteLease)(nil), "ardapoc.rent.MsgDeleteLease")
	proto.RegisterType((*MsgDeleteLeaseResponse)(nil), "ardapoc.rent.MsgDeleteLeaseResponse")
	proto.RegisterType((*MsgPayRent)(nil), "ardapoc.rent.MsgPayRent")
	proto.RegisterType((*MsgPayRentResponse)(nil), "ardapoc.rent.MsgPayRentResponse")
}

func init() { proto.RegisterFile("ardapoc/rent/tx.proto", fileDescriptor_714f33a00203e81b) }

var fileDescriptor_714f33a00203e81b = []byte{
	// 852 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0xb3, 0xf9, 0x61, 0xc7, 0x63, 0x37, 0x49, 0x07, 0xb7, 0x9d, 0x5a, 0x65, 0xb1, 0x2c,
	0x90, 0xac, 0xa0, 0xda, 0x34, 0x20, 0x90, 0x72, 0x6b, 0x48, 0x25, 0x2a, 0xd5, 0x60, 0xb6, 0xe5,
	0xc2, 0x05, 0x4d, 0x76, 0x47, 0x9b, 0x15, 0xbb, 0x33, 0xcb, 0xcc, 0x2c, 0xaa, 0x6f, 0x88, 0x23,
	0x07, 0xc4, 0x5f, 0xc0, 0x81, 0x13, 0xc7, 0x1c, 0xe0, 0x7f, 0xe8, 0xb1, 0xe2, 0xc4, 0x09, 0xa1,
	0xe4, 0x90, 0x7f, 0xa3, 0x9a, 0x99, 0x5d, 0x7b, 0x6c, 0xaf, 0x5d, 0x3b, 0x97, 0x64, 0xdf, 0xfb,
	0xce, 0xfb, 0xbe, 0xb7, 0x3b, 0x1f, 0xef, 0x2c, 0xb8, 0x83, 0x79, 0x80, 0x53, 0xe6, 0xf7, 0x39,
	0xa1, 0xb2, 0x2f, 0x5f, 0xf6, 0x52, 0xce, 0x24, 0x83, 0x8d, 0x3c, 0xdd, 0x53, 0xe9, 0xd6, 0x6d,
	0x9c, 0x44, 0x94, 0xf5, 0xf5, 0x5f, 0xb3, 0xa0, 0x75, 0xcf, 0x67, 0x22, 0x61, 0xa2, 0x9f, 0x88,
	0xb0, 0xff, 0xe3, 0x23, 0xf5, 0x2f, 0x17, 0xee, 0x1b, 0xe1, 0x3b, 0x1d, 0xf5, 0x4d, 0x90, 0x4b,
	0xcd, 0x90, 0x85, 0xcc, 0xe4, 0xd5, 0x55, 0x51, 0x30, 0x35, 0x41, 0x8a, 0x39, 0x4e, 0x8a, 0x02,
	0x34, 0x25, 0xc5, 0x04, 0x0b, 0x62, 0x94, 0xce, 0xdf, 0x0e, 0xd8, 0x1f, 0x88, 0xf0, 0x9b, 0x34,
	0xc0, 0x92, 0x0c, 0x75, 0x0d, 0xfc, 0x14, 0xd4, 0x70, 0x26, 0xcf, 0x19, 0x8f, 0xe4, 0x08, 0x39,
	0x6d, 0xa7, 0x5b, 0x3b, 0x41, 0xff, 0xfc, 0xf5, 0xb0, 0x99, 0xcf, 0xf0, 0x38, 0x08, 0x38, 0x11,
	0xe2, 0xb9, 0xe4, 0x11, 0x0d, 0xbd, 0xc9, 0x52, 0xf8, 0x19, 0xa8, 0x98, 0xae, 0x68, 0xb3, 0xed,
	0x74, 0xeb, 0x47, 0xcd, 0x9e, 0x7d, 0xf3, 0x3d, 0xe3, 0x7e, 0x52, 0x7b, 0xf5, 0xdf, 0x7b, 0x1b,
	0x7f, 0x5e, 0x5f, 0x1c, 0x3a, 0x5e, 0xbe, 0xfc, 0xf8, 0xd1, 0xcf, 0xd7, 0x17, 0x87, 0x13, 0xa3,
	0x5f, 0xae, 0x2f, 0x0e, 0xdd, 0x62, 0xe2, 0x97, 0x66, 0xe6, 0x99, 0x19, 0x3b, 0xf7, 0xc1, 0xbd,
	0x99, 0x94, 0x47, 0x44, 0xca, 0xa8, 0x20, 0x9d, 0x5f, 0x77, 0xc0, 0xde, 0x40, 0x84, 0x9f, 0x73,
	0x82, 0x25, 0x79, 0xa6, 0xee, 0x15, 0x22, 0x50, 0xf5, 0x55, 0xc8, 0xb8, 0xb9, 0x1f, 0xaf, 0x08,
	0xa1, 0x0b, 0x40, 0xca, 0x59, 0x4a, 0xb8, 0x1c, 0x3d, 0x0d, 0xf4, 0xdc, 0x35, 0xcf, 0xca, 0xc0,
	0xbb, 0xa0, 0x22, 0x09, 0xc5, 0x54, 0xa2, 0x2d, 0xad, 0xe5, 0x91, 0xaa, 0x53, 0x73, 0x3d, 0x4e,
	0x58, 0x46, 0x25, 0xda, 0x6e, 0x3b, 0xdd, 0x6d, 0xcf, 0xca, 0xc0, 0x36, 0xa8, 0xab, 0xe8, 0x34,
	0x23, 0xa7, 0x58, 0x12, 0xb4, 0xa3, 0x8b, 0xed, 0x94, 0x72, 0x16, 0x12, 0xcb, 0x4c, 0xa0, 0x8a,
	0x71, 0x36, 0x91, 0x72, 0x96, 0x51, 0x42, 0x86, 0x84, 0x47, 0x2c, 0x40, 0x55, 0xe3, 0x3c, 0xc9,
	0xc0, 0x8f, 0xc0, 0x3b, 0x29, 0x1e, 0x25, 0x84, 0x4a, 0xf1, 0x55, 0x26, 0x85, 0xc4, 0x34, 0x88,
	0x68, 0x88, 0x76, 0xb5, 0x49, 0x99, 0xa4, 0x1d, 0x09, 0x4f, 0x9e, 0x11, 0x1a, 0xca, 0x73, 0x54,
	0x33, 0xf7, 0x38, 0xc9, 0xc0, 0x2e, 0xd8, 0xe7, 0xc4, 0xcf, 0xb8, 0xda, 0xcf, 0xe7, 0x66, 0x24,
	0xd0, 0x76, 0xba, 0xbb, 0xde, 0x6c, 0x5a, 0xf5, 0xf6, 0x31, 0xf5, 0x49, 0x1c, 0x63, 0x19, 0x31,
	0x3a, 0x24, 0xa6, 0x77, 0x5d, 0xaf, 0x2e, 0x93, 0xe0, 0x27, 0xe0, 0x8e, 0x9d, 0x7e, 0x4a, 0x23,
	0x19, 0xe9, 0x7d, 0x68, 0xe8, 0x31, 0xca, 0x45, 0x78, 0x04, 0x9a, 0xb6, 0x70, 0x4a, 0x70, 0x10,
	0x47, 0x94, 0xa0, 0x5b, 0xfa, 0x69, 0x94, 0x6a, 0xf0, 0x10, 0x1c, 0xc4, 0x58, 0xc8, 0xa1, 0x79,
	0x00, 0x27, 0x31, 0xf3, 0xbf, 0x47, 0x7b, 0x7a, 0xfd, 0x5c, 0x1e, 0x76, 0x40, 0x23, 0x7f, 0x50,
	0x2f, 0x08, 0x4f, 0x04, 0xda, 0xd7, 0xc3, 0x4c, 0xe5, 0xe0, 0x31, 0x40, 0x76, 0x1f, 0x8f, 0xfc,
	0x90, 0x45, 0x9c, 0xe8, 0x87, 0x8b, 0x0e, 0xf4, 0xfa, 0x85, 0xfa, 0x71, 0x43, 0x01, 0x5d, 0x30,
	0xd6, 0xe9, 0x82, 0xbb, 0xd3, 0x3c, 0x16, 0xa8, 0xc2, 0x3d, 0xb0, 0x19, 0x05, 0x1a, 0xc9, 0x6d,
	0x6f, 0x33, 0x0a, 0x3a, 0xbf, 0x1b, 0x74, 0x0d, 0xd6, 0x6f, 0x43, 0xd7, 0x14, 0x6f, 0x16, 0xc5,
	0x33, 0x28, 0x6f, 0x2d, 0x41, 0x79, 0x7b, 0x09, 0xca, 0x3b, 0x6f, 0x43, 0xb9, 0xb2, 0x0c, 0xe5,
	0xea, 0x12, 0x94, 0x77, 0x57, 0x45, 0xb9, 0xb6, 0x2a, 0xca, 0x60, 0x15, 0x94, 0xeb, 0x6b, 0xa1,
	0xdc, 0xb8, 0x01, 0xca, 0xb7, 0x6e, 0x82, 0xf2, 0xde, 0x9a, 0x28, 0xef, 0xaf, 0x88, 0xf2, 0xc1,
	0x9a, 0x28, 0xdf, 0x5e, 0x0b, 0x65, 0xa4, 0x51, 0xb6, 0xf8, 0x1c, 0xbf, 0x75, 0xbf, 0xd0, 0xe4,
	0x9e, 0x92, 0x98, 0xac, 0x4d, 0x6e, 0x69, 0x0f, 0xcb, 0x69, 0xdc, 0xe3, 0x4b, 0x00, 0x06, 0x22,
	0x1c, 0xe2, 0x91, 0x47, 0xa8, 0x5c, 0xe2, 0x8f, 0x40, 0x55, 0x9f, 0x71, 0xe3, 0x37, 0x7a, 0x11,
	0xce, 0x74, 0x6a, 0x02, 0x38, 0xf1, 0x2b, 0xba, 0x1c, 0xfd, 0xb1, 0x05, 0xb6, 0x06, 0x22, 0x84,
	0x2f, 0x40, 0x63, 0xea, 0x58, 0x7c, 0x77, 0xfa, 0x38, 0x9b, 0x39, 0x7e, 0x5a, 0x1f, 0x2c, 0x95,
	0xc7, 0x3f, 0xf9, 0xaf, 0x41, 0xdd, 0x3e, 0x99, 0x1e, 0xcc, 0x55, 0x59, 0x6a, 0xeb, 0xfd, 0x65,
	0xaa, 0x6d, 0x69, 0xbf, 0x31, 0x1e, 0x2c, 0x18, 0x64, 0x91, 0x65, 0xc9, 0x6e, 0x2a, 0x4b, 0x7b,
	0x2b, 0xe7, 0x2d, 0x2d, 0xb5, 0xc4, 0xb2, 0x64, 0xf3, 0xe0, 0x13, 0x50, 0x1d, 0xef, 0xdc, 0x5c,
	0x41, 0xae, 0xb4, 0xda, 0x8b, 0x94, 0xc2, 0xa6, 0xb5, 0xf3, 0x93, 0xfa, 0x74, 0x38, 0x79, 0xf2,
	0xea, 0xd2, 0x75, 0x5e, 0x5f, 0xba, 0xce, 0xff, 0x97, 0xae, 0xf3, 0xdb, 0x95, 0xbb, 0xf1, 0xfa,
	0xca, 0xdd, 0xf8, 0xf7, 0xca, 0xdd, 0xf8, 0xf6, 0xc3, 0x30, 0x92, 0xe7, 0xd9, 0x59, 0xcf, 0x67,
	0x49, 0x5f, 0x99, 0x85, 0x31, 0x3b, 0xc3, 0xb1, 0xbe, 0x7c, 0x68, 0x7d, 0x50, 0xc8, 0x51, 0x4a,
	0xc4, 0x59, 0x45, 0x7f, 0x05, 0x7d, 0xfc, 0x26, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x32, 0x13, 0xdb,
	0xbe, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateLease(ctx context.Context, in *MsgCreateLease, opts ...grpc.CallOption) (*MsgCreateLeaseResponse, error)
	UpdateLease(ctx context.Context, in *MsgUpdateLease, opts ...grpc.CallOption) (*MsgUpdateLeaseResponse, error)
	DeleteLease(ctx context.Context, in *MsgDeleteLease, opts ...grpc.CallOption) (*MsgDeleteLeaseResponse, error)
	PayRent(ctx context.Context, in *MsgPayRent, opts ...grpc.CallOption) (*MsgPayRentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/ardapoc.rent.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLease(ctx context.Context, in *MsgCreateLease, opts ...grpc.CallOption) (*MsgCreateLeaseResponse, error) {
	out := new(MsgCreateLeaseResponse)
	err := c.cc.Invoke(ctx, "/ardapoc.rent.Msg/CreateLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLease(ctx context.Context, in *MsgUpdateLease, opts ...grpc.CallOption) (*MsgUpdateLeaseResponse, error) {
	out := new(MsgUpdateLeaseResponse)
	err := c.cc.Invoke(ctx, "/ardapoc.rent.Msg/UpdateLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLease(ctx context.Context, in *MsgDeleteLease, opts ...grpc.CallOption) (*MsgDeleteLeaseResponse, error) {
	out := new(MsgDeleteLeaseResponse)
	err := c.cc.Invoke(ctx, "/ardapoc.rent.Msg/DeleteLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PayRent(ctx context.Context, in *MsgPayRent, opts ...grpc.CallOption) (*MsgPayRentResponse, error) {
	out := new(MsgPayRentResponse)
	err := c.cc.Invoke(ctx, "/ardapoc.rent.Msg/PayRent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateLease(context.Context, *MsgCreateLease) (*MsgCreateLeaseResponse, error)
	UpdateLease(context.Context, *MsgUpdateLease) (*MsgUpdateLeaseResponse, error)
	DeleteLease(context.Context, *MsgDeleteLease) (*MsgDeleteLeaseResponse, error)
	PayRent(context.Context, *MsgPayRent) (*MsgPayRentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateLease(ctx context.Context, req *MsgCreateLease) (*MsgCreateLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLease not implemented")
}
func (*UnimplementedMsgServer) UpdateLease(ctx context.Context, req *MsgUpdateLease) (*MsgUpdateLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLease not implemented")
}
func (*UnimplementedMsgServer) DeleteLease(ctx context.Context, req *MsgDeleteLease) (*MsgDeleteLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLease not implemented")
}
func (*UnimplementedMsgServer) PayRent(ctx context.Context, req *MsgPayRent) (*MsgPayRentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PayRent not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardapoc.rent.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardapoc.rent.Msg/CreateLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLease(ctx, req.(*MsgCreateLease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardapoc.rent.Msg/UpdateLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLease(ctx, req.(*MsgUpdateLease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardapoc.rent.Msg/DeleteLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLease(ctx, req.(*MsgDeleteLease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PayRent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPayRent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PayRent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardapoc.rent.Msg/PayRent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PayRent(ctx, req.(*MsgPayRent))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ardapoc.rent.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateLease",
			Handler:    _Msg_CreateLease_Handler,
		},
		{
			MethodName: "UpdateLease",
			Handler:    _Msg_UpdateLease_Handler,
		},
		{
			MethodName: "DeleteLease",
			Handler:    _Msg_DeleteLease_Handler,
		},
		{
			MethodName: "PayRent",
			Handler:    _Msg_PayRent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ardapoc/rent/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateLease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CancellationRequirements) > 0 {
		i -= len(m.CancellationRequirements)
		copy(dAtA[i:], m.CancellationRequirements)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CancellationRequirements)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.PaymentTerms) > 0 {
		i -= len(m.PaymentTerms)
		copy(dAtA[i:], m.PaymentTerms)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentTerms)))
		i--
		dAtA[i] = 0x7a
	}
	if m.LastPaymentBlock != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastPaymentBlock))
		i--
		dAtA[i] = 0x70
	}
	if m.CancellationDeadline != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CancellationDeadline))
		i--
		dAtA[i] = 0x68
	}
	if len(m.CancellationInitiator) > 0 {
		i -= len(m.CancellationInitiator)
		copy(dAtA[i:], m.CancellationInitiator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CancellationInitiator)))
		i--
		dAtA[i] = 0x62
	}
	if m.CancellationPending {
		i--
		if m.CancellationPending {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.RecurringStatus {
		i--
		if m.RecurringStatus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.TermLength) > 0 {
		i -= len(m.TermLength)
		copy(dAtA[i:], m.TermLength)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TermLength)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.PaymentsOutstanding) > 0 {
		i -= len(m.PaymentsOutstanding)
		copy(dAtA[i:], m.PaymentsOutstanding)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentsOutstanding)))
		i--
		dAtA[i] = 0x42
	}
	if m.TimePeriod != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TimePeriod))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.RentDueDate) > 0 {
		i -= len(m.RentDueDate)
		copy(dAtA[i:], m.RentDueDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RentDueDate)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RentAmount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RentAmount))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Tenant) > 0 {
		i -= len(m.Tenant)
		copy(dAtA[i:], m.Tenant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tenant)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PropertyId) > 0 {
		i -= len(m.PropertyId)
		copy(dAtA[i:], m.PropertyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PropertyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLeaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLeaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLeaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CancellationRequirements) > 0 {
		i -= len(m.CancellationRequirements)
		copy(dAtA[i:], m.CancellationRequirements)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CancellationRequirements)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.PaymentTerms) > 0 {
		i -= len(m.PaymentTerms)
		copy(dAtA[i:], m.PaymentTerms)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentTerms)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.LastPaymentBlock != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastPaymentBlock))
		i--
		dAtA[i] = 0x78
	}
	if m.CancellationDeadline != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CancellationDeadline))
		i--
		dAtA[i] = 0x70
	}
	if len(m.CancellationInitiator) > 0 {
		i -= len(m.CancellationInitiator)
		copy(dAtA[i:], m.CancellationInitiator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CancellationInitiator)))
		i--
		dAtA[i] = 0x6a
	}
	if m.CancellationPending {
		i--
		if m.CancellationPending {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.RecurringStatus {
		i--
		if m.RecurringStatus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if len(m.TermLength) > 0 {
		i -= len(m.TermLength)
		copy(dAtA[i:], m.TermLength)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TermLength)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.PaymentsOutstanding) > 0 {
		i -= len(m.PaymentsOutstanding)
		copy(dAtA[i:], m.PaymentsOutstanding)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentsOutstanding)))
		i--
		dAtA[i] = 0x4a
	}
	if m.TimePeriod != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TimePeriod))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RentDueDate) > 0 {
		i -= len(m.RentDueDate)
		copy(dAtA[i:], m.RentDueDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RentDueDate)))
		i--
		dAtA[i] = 0x32
	}
	if m.RentAmount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RentAmount))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Tenant) > 0 {
		i -= len(m.Tenant)
		copy(dAtA[i:], m.Tenant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tenant)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PropertyId) > 0 {
		i -= len(m.PropertyId)
		copy(dAtA[i:], m.PropertyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PropertyId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLeaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLeaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLeaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLeaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLeaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLeaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPayRent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPayRent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPayRent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LeaseId) > 0 {
		i -= len(m.LeaseId)
		copy(dAtA[i:], m.LeaseId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LeaseId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPayRentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPayRentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPayRentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateLease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PropertyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Tenant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RentAmount != 0 {
		n += 1 + sovTx(uint64(m.RentAmount))
	}
	l = len(m.RentDueDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TimePeriod != 0 {
		n += 1 + sovTx(uint64(m.TimePeriod))
	}
	l = len(m.PaymentsOutstanding)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TermLength)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RecurringStatus {
		n += 2
	}
	if m.CancellationPending {
		n += 2
	}
	l = len(m.CancellationInitiator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CancellationDeadline != 0 {
		n += 1 + sovTx(uint64(m.CancellationDeadline))
	}
	if m.LastPaymentBlock != 0 {
		n += 1 + sovTx(uint64(m.LastPaymentBlock))
	}
	l = len(m.PaymentTerms)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CancellationRequirements)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateLeaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateLease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.PropertyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Tenant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RentAmount != 0 {
		n += 1 + sovTx(uint64(m.RentAmount))
	}
	l = len(m.RentDueDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TimePeriod != 0 {
		n += 1 + sovTx(uint64(m.TimePeriod))
	}
	l = len(m.PaymentsOutstanding)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TermLength)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RecurringStatus {
		n += 2
	}
	if m.CancellationPending {
		n += 2
	}
	l = len(m.CancellationInitiator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CancellationDeadline != 0 {
		n += 1 + sovTx(uint64(m.CancellationDeadline))
	}
	if m.LastPaymentBlock != 0 {
		n += 1 + sovTx(uint64(m.LastPaymentBlock))
	}
	l = len(m.PaymentTerms)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.CancellationRequirements)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLeaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteLeaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPayRent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LeaseId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPayRentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PropertyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PropertyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tenant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tenant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RentAmount", wireType)
			}
			m.RentAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RentAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RentDueDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RentDueDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimePeriod", wireType)
			}
			m.TimePeriod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimePeriod |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentsOutstanding", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentsOutstanding = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TermLength", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TermLength = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecurringStatus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecurringStatus = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationPending", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CancellationPending = bool(v != 0)
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationInitiator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancellationInitiator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationDeadline", wireType)
			}
			m.CancellationDeadline = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CancellationDeadline |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPaymentBlock", wireType)
			}
			m.LastPaymentBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPaymentBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTerms", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentTerms = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationRequirements", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancellationRequirements = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLeaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLeaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLeaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PropertyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PropertyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tenant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tenant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RentAmount", wireType)
			}
			m.RentAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RentAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RentDueDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RentDueDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimePeriod", wireType)
			}
			m.TimePeriod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimePeriod |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentsOutstanding", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentsOutstanding = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TermLength", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TermLength = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecurringStatus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecurringStatus = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationPending", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CancellationPending = bool(v != 0)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationInitiator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancellationInitiator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationDeadline", wireType)
			}
			m.CancellationDeadline = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CancellationDeadline |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPaymentBlock", wireType)
			}
			m.LastPaymentBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPaymentBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTerms", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentTerms = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancellationRequirements", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancellationRequirements = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLeaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLeaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLeaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLeaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLeaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLeaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPayRent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPayRent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPayRent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LeaseId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPayRentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPayRentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPayRentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
