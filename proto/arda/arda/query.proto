syntax = "proto3";
package arda.arda;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "arda/arda/params.proto";
import "arda/arda/submission.proto";

option go_package = "github.com/ardaglobal/arda-poc/x/arda/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/arda/arda/params";
  }
 
  rpc Submission(QueryGetSubmissionRequest) returns (QueryGetSubmissionResponse) {
    option (google.api.http).get = "/cosmonaut/arda/arda/submissions/{id}";
  }

  rpc SubmissionAll(QueryAllSubmissionRequest) returns (QueryAllSubmissionResponse) {
    option (google.api.http).get = "/cosmonaut/arda/arda/submissions";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message QueryGetSubmissionRequest {
  uint64 id = 1;
}

message QueryGetSubmissionResponse {
  Submission submission = 1;
}

message QueryAllSubmissionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSubmissionResponse {
  repeated Submission submission = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
